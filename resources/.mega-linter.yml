---
# Default Elhub Configuration file for MegaLinter
#
# See all available variables at https://megalinter.io/latest/config-file/ and in
# linters documentation

LINTER_RULES_PATH: https://github.com/elhub/devxp-lint-configuration/tree/test/test-pr-for-gitleaks/resources

REPORT_OUTPUT_FOLDER: none # Set due to https://github.com/oxsecurity/megalinter/issues/1975

# all, none, or list of linter keys
APPLY_FIXES: none

# If you use ENABLE variable, all other languages/formats/tooling-formats will
# be disabled by default
# ENABLE:

# If you use ENABLE_LINTERS variable, all other linters will be disabled by
# default
ENABLE_LINTERS:
  - API_SPECTRAL
  - ANSIBLE_ANSIBLE_LINT
  - BASH_EXEC
  - BASH_SHELLCHECK
  - CSS_STYLELINT
  - EDITORCONFIG_EDITORCONFIG_CHECKER
  - ENV_DOTENV_LINTER
  - GO_GOLANGCI_LINT
  - GO_REVIVE
  - HTML_HTMLHINT
  - JAVA_CHECKSTYLE
  - JAVA_PMD
  - JAVASCRIPT_ES
  - JAVASCRIPT_PRETTIER
  - JAVASCRIPT_STANDARD
  - JSON_JSONLINT
  - JSON_PRETTIER
  - KOTLIN_DETEKT
  - KOTLIN_KTLINT
  - KUBERNETES_HELM
  - MAKEFILE_CHECKMAKE
  - MARKDOWN_MARKDOWNLINT
  - POWERSHELL_POWERSHELL
  - POWERSHELL_POWERSHELL_FORMATTER
  - PYTHON_BLACK
  - PYTHON_FLAKE8
  - PYTHON_PYLINT
  - REPOSITORY_GIT_DIFF
#  - REPOSITORY_GITLEAKS
  - REPOSITORY_SECRETLINT
# - REPOSITORY_SEMGREP
# - REPOSITORY_TRIVY
  - SQL_SQLFLUFF
  - TERRAFORM_TERRAFORM_FMT
  - TERRAFORM_TERRAGRUNT
  - TERRAFORM_TERRASCAN
  - TERRAFORM_TFLINT
  - TYPESCRIPT_ES
  - TYPESCRIPT_PRETTIER
  - TYPESCRIPT_STANDARD
  - XML_XMLLINT
  - YAML_PRETTIER
  - YAML_YAMLLINT

DISABLE_ERRORS_LINTERS:
  - GO_GOLANGCI_LINT

DISABLE:
  - SPELL # Uncomment to disable checks of spelling mistakes
# - COPYPASTE # Uncomment to disable checks of excessive copy-pastes

SHOW_ELAPSED_TIME: true

FILEIO_REPORTER: false
# Uncomment if you want MegaLinter to detect errors but not block CI to pass
# DISABLE_ERRORS: true

# Ensure EditorConfig is up to date
PRE_COMMANDS:
  - command: 'curl https://raw.githubusercontent.com/elhub/devxp-project-template/refs/heads/main/resources/.editorconfig-template -o ./.editorconfig'
    cwd: workspace

# GOLANGCI_LINT configuration
GO_GOLANGCI_LINT_ARGUMENTS: ['run', './...']

# KOTLIN_DETEKT configuration
KOTLIN_DETEKT_PRE_COMMANDS:
  [
    command: 'curl https://raw.githubusercontent.com/elhub/devxp-lint-configuration/main/resources/.detekt.yml -o /tmp/.detekt.yml'
  ]
KOTLIN_DETEKT_ARGUMENTS:
  [
    '--build-upon-default-config',
    '--config',
    '/tmp/.detekt.yml'
  ]

KOTLIN_KTLINT_PRE_COMMANDS:
  [
    command: 'curl https://raw.githubusercontent.com/elhub/devxp-lint-configuration/refs/heads/main/resources/.ktlint_editorconfig -o /tmp/.ktlint_editorconfig'
  ]

KOTLIN_KTLINT_ARGUMENTS:
  ['--editorconfig=/tmp/.ktlint_editorconfig']

# REPOSITORY_SEMGREP_RULESETS: ["p/default","p/owasp-top-ten"]
JAVA_CHECKSTYLE_PRE_COMMANDS:
  [
    command: 'curl https://raw.githubusercontent.com/elhub/devxp-lint-configuration/main/resources/checkstyle-config.xml -o /tmp/checkstyle-config.xml'
  ]
JAVA_CHECKSTYLE_ARGUMENTS: -c /tmp/checkstyle-config.xml

JAVA_PMD_PRE_COMMANDS:
  [
    command: 'curl https://raw.githubusercontent.com/elhub/devxp-lint-configuration/main/resources/java-pmd-ruleset.xml -o /tmp/java-pmd-ruleset.xml'
  ]

API_SPECTRAL_FILE_NAMES_REGEX:
  - '^openapi\.yaml$'
